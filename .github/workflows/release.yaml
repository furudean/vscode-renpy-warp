'on':
    release:
        types: [published]
    workflow_dispatch: {}

name: Release
jobs:
    release:
        permissions:
            contents: write
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                include:
                    - os: ubuntu-latest
                      target: linux-x64
                      platformName: linux
                    - os: macos-latest
                      target: darwin-x64 darwin-arm64
                      platformName: mac
                    - os: windows-latest
                      target: win32-x64
                      platformName: win

        runs-on: '${{ matrix.os }}'
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'npm'

            - run: npm ci

            - name: create extension package
              run: >-
                  npm run package --
                  --out renpy-warp-${{ github.ref_name }}-${{ matrix.platformName }}.vsix

            - name: create github release
              uses: ncipollo/release-action@v1
              with:
                  artifacts: '*.vsix'
                  replacesArtifacts: false
                  tag: ${{ github.ref_name }}
                  allowUpdates: true
                  makeLatest: false
                  omitNameDuringUpdate: true
                  omitBodyDuringUpdate: true
                  omitPrereleaseDuringUpdate: true
                  omitDraftDuringUpdate: true

            - name: release to visual studio code marketplace
              run: npm run publish:vsce -- --target ${{ matrix.target }}
              env:
                  VSCE_PAT: '${{ secrets.VSCE_PAT }}'

            - name: release to open vsx registry
              run: >-
                  npm run publish:ovsx --
                  --target ${{ matrix.target }}
                  --pat ${{ secrets.OVSX_TOKEN }}
